function t(){return t=Object.assign?Object.assign.bind():function(t){for(var r=1;r<arguments.length;r++){var e=arguments[r];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])}return t},t.apply(this,arguments)}const r={maxAttempts:10,retryDelay:0,onError:(t,r)=>{}};function e(n,o=r,a=1){const s=t({},r,o);return n(a).catch(t=>{if(s.onError(t,a),a<s.maxAttempts)return new Promise(t=>{setTimeout(()=>t(e(n,o,a+1)),s.retryDelay)});throw t})}export{e as default};
//# sourceMappingURL=promise-retry.modern.js.map
