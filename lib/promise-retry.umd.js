!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t||self).promiseRetry=e()}(this,function(){function t(){return t=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},t.apply(this,arguments)}var e={maxAttempts:10,retryDelay:0,onError:function(t,e){}};return function n(r,o,i){void 0===o&&(o=e),void 0===i&&(i=1);var f=t({},e,o);return r(i).catch(function(t){if(f.onError(t,i),i<f.maxAttempts)return new Promise(function(t){setTimeout(function(){return t(n(r,o,i+1))},f.retryDelay)});throw t})}});
//# sourceMappingURL=promise-retry.umd.js.map
